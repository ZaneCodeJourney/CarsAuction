version: "3.0"
networks:
  apps:
    driver: bridge
services:
  auction-svc:
    image: zane007/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auctions
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7001:80
    # depends_on:
    #   - postgres
    #   - rabbitmq
    networks:
      - apps
  search-svc:
    image: zane007/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    # depends_on:
    #   - mongodb
    #   - rabbitmq
    networks:
      - apps
  identity-svc:
    image: zane007/identity-svc:latest
    build:
      context: .
      dockerfile: src/identityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
    ports:
      - 5000:80
    # depends_on:
    #   - postgres
    networks:
      - apps
  gateway-svc:
    image: zane007/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
    networks:
      - apps
